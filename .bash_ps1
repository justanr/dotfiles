#/bin/bash

export VIRTUAL_ENV_DISABLE_PROMPT=1

function _fancy_prompt {
  local RED="\[\033[01;31m\]"
  local GREEN="\[\033[01;32m\]"
  local YELLOW="\[\033[01;33m\]"
  local BLUE="\[\033[01;34m\]"
  local WHITE="\[\033[00m\]"
  local PURPLE="\[\033[01;35m\]"

  local PROMPT=""

  # Working directory
  PROMPT=$PROMPT"$GREEN\w"

  # Git-specific
  local GIT_STATUS=$(git status 2> /dev/null)
  if [ -n "$GIT_STATUS" ] # Are we in a git directory?
  then
    # Open paren
    PROMPT=$PROMPT" $RED(branch:"

    # Branch
    PROMPT=$PROMPT$(git branch --no-color 2> /dev/null | sed -e "/^[^*]/d" -e "s/* \(.*\)/\1/")

    # Warnings
    PROMPT=$PROMPT$YELLOW

    # Merging
    echo $GIT_STATUS | grep "Unmerged paths" > /dev/null 2>&1
    if [ "$?" -eq "0" ]
    then
      PROMPT=$PROMPT"|MERGING"
    fi

    # Dirty flag
    echo $GIT_STATUS | grep "nothing to commit" > /dev/null 2>&1
    if [ "$?" -eq 0 ]
    then
      PROMPT=$PROMPT
    else
      PROMPT=$PROMPT"*"
    fi

    # Closing paren
    PROMPT=$PROMPT"$RED)"
  fi

  if command -v kubectl > /dev/null 2>&1 /; then
    kubecontext=$(kubectl config current-context 2> /dev/null)
    if [ $? == 0 ] && [ "${kubecontext}" != "" ]; then
       PROMPT="${PROMPT}${PURPLE}(${kubecontext})"
    fi
  fi

  #virtualenv
  if [[ -n "$VIRTUAL_ENV" ]]
  then
    PROMPT=$PROMPT" $YELLOW(venv:"
    PROMPT=$PROMPT"$(basename $VIRTUAL_ENV)"
    PROMPT=$PROMPT")"
  fi

  # Final $ symbol
  PROMPT=$PROMPT" $BLUE\$$WHITE "

  export PS1=$PROMPT
}

export PROMPT_COMMAND="_fancy_prompt"
